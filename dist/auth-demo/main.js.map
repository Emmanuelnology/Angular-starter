{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/helpers/fake-backend.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/no-access/no-access.component.css","webpack:///./src/app/no-access/no-access.component.html","webpack:///./src/app/no-access/no-access.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/services/admin-auth-guard.service.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/order.service.ts","webpack:///./src/app/services/token.interceptor.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n\\n<div class=\\\"container\\\">\\n  <ngx-spinner></ngx-spinner>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n    <h1 class=\\\"display-2 mt-3\\\">Admin</h1>\\n    <h2>Orders</h2>\\n    \\n    <ul>\\n      <li *ngFor=\\\"let order of orders\\\">{{ order }}</li>\\n    </ul>\\n  </div>\\n</div>\\n</div>\"","import { OrderService,IOrder } from './../services/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  \n  orders;\n\n  constructor(\n    private orderService: OrderService,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit() {\n    this.spinner.show();\n    this.orderService.getOrders()\n      .subscribe(\n        orders => {\n          this.orders = orders;\n          this.spinner.hide();\n        },\n        error=>{\n          console.log(error);\n        }\n        );\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { AuthGuard } from './services/auth-guard.service';\nimport { AdminAuthGuard } from './services/admin-auth-guard.service';\nimport { OrderService } from './services/order.service';\nimport { MockBackend } from '@angular/http/testing';\nimport { fakeBackendProvider } from './helpers/fake-backend';\nimport { AuthService } from './services/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BaseRequestOptions } from '@angular/http';\nimport { RouterModule } from '@angular/router'; \nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { NoAccessComponent } from './no-access/no-access.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './services/token.interceptor';\nimport { NavComponent } from './nav/nav.component';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    AdminComponent,\n    HomeComponent,\n    NotFoundComponent,\n    NoAccessComponent,\n    NavComponent\n  ],\n  imports: [\n    NgbModule,\n    NgxSpinnerModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n      { path: 'admin', component: AdminComponent, canActivate: [AuthGuard,AdminAuthGuard] },\n      { path: 'login', component: LoginComponent },\n      { path: 'no-access', component: NoAccessComponent }\n    ])\n  ],\n  providers: [\n    OrderService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n\n    // For creating a mock back-end. You don't need these in a real app. \n    fakeBackendProvider,\n    MockBackend,\n    BaseRequestOptions\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Http, BaseRequestOptions, Response, ResponseOptions, RequestMethod } from '@angular/http';\nimport { MockBackend, MockConnection } from '@angular/http/testing';\n\nexport function fakeBackendFactory(\n    backend: MockBackend, \n    options: BaseRequestOptions) {\n    \n      \n  let jane={\n      admin: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZmlyc3ROYW1lIjoiSmFuZSIsImxhc3ROYW1lIjoiRG9lIiwiZW1haWwiOiJqYW5lQGdtYWlsLmxvY2FsIiwiaWF0IjoxNTM4NDk5NjgxLCJleHAiOjE1NDg0NjA4MDAsImF2YXRhciI6Imh0dHBzOi8vd3d3LnJ0aS5vcmcvc2l0ZXMvZGVmYXVsdC9maWxlcy9zdHlsZXMvcnRpX3NxdWFyZV8xMDIwL3B1YmxpYy9leHBlcnQtaW1hZ2VzL2FsbGVuX2phbmVfNzk0MV81MTAuanBnP2l0b2s9VlZtbFVwTHciLCJpc0FkbWluIjp0cnVlfQ.BadiWPqYsxX7tvHRbjmnX_T4fqdW7vs1ies_NQup-tM\",\n      notAdmin: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZmlyc3ROYW1lIjoiSmFuZSIsImxhc3ROYW1lIjoiRG9lIiwiZW1haWwiOiJqYW5lQGdtYWlsLmxvY2FsIiwiaWF0IjoxNTM4NDk5NjgxLCJleHAiOjE1NDg0NjA4MDAsImF2YXRhciI6Imh0dHBzOi8vd3d3LnJ0aS5vcmcvc2l0ZXMvZGVmYXVsdC9maWxlcy9zdHlsZXMvcnRpX3NxdWFyZV8xMDIwL3B1YmxpYy9leHBlcnQtaW1hZ2VzL2FsbGVuX2phbmVfNzk0MV81MTAuanBnP2l0b2s9VlZtbFVwTHciLCJpc0FkbWluIjpmYWxzZX0.a2k3zspWMuj4FeGoouy-nJrHMlYyT9ClVH2IuXO-vl8\"\n    };\n  let john={\n      admin: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZmlyc3ROYW1lIjoiSm9obiIsImxhc3ROYW1lIjoiRG9lIiwiZW1haWwiOiJqb2huQGdtYWlsLmxvY2FsIiwiaWF0IjoxNTM4NDk5NjgxLCJleHAiOjE1NDg0NjA4MDAsImF2YXRhciI6Imh0dHBzOi8vd3d3LmhvYS5veC5hYy51ay9zaXRlcy9kZWZhdWx0L2ZpbGVzL3N0eWxlcy9wZXJzb25fcHJvZmlsZV9waG90by9wdWJsaWMvaG9hL2ltYWdlcy9wZXJzb24vam9obl9ibGFraW5nZXJfMy5qcGc_aXRvaz12R0dDTmZzVyIsImlzQWRtaW4iOnRydWV9.4OtF2gAEg87MjGGS-RKU3-jnP20i0gBe6hyqVPrMkw4\",\n      notAdmin: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZmlyc3ROYW1lIjoiSm9obiIsImxhc3ROYW1lIjoiRG9lIiwiZW1haWwiOiJqb2huQGdtYWlsLmxvY2FsIiwiaWF0IjoxNTM4NDk5NjgxLCJleHAiOjE1NDg0NjA4MDAsImF2YXRhciI6Imh0dHBzOi8vd3d3LmhvYS5veC5hYy51ay9zaXRlcy9kZWZhdWx0L2ZpbGVzL3N0eWxlcy9wZXJzb25fcHJvZmlsZV9waG90by9wdWJsaWMvaG9hL2ltYWdlcy9wZXJzb24vam9obl9ibGFraW5nZXJfMy5qcGc_aXRvaz12R0dDTmZzVyIsImlzQWRtaW4iOmZhbHNlfQ._ZRGljKt2WFqduP0oJJDqWKN4qC4O01V6c1anawf5Ls\"\n    };\n\n  function getTokenFromEmail(email){\n    let token:string;\n\n    switch(email) {\n      case \"jane@gmail.admin\":\n          token=jane.admin;\n          break;\n      case \"jane@gmail.local\":\n          token=jane.notAdmin;\n          break;\n      case \"john@gmail.admin\":\n          token=john.admin;\n          break;\n      case \"john@gmail.local\":\n          token=john.notAdmin;\n          break;\n      default:\n          token=jane.admin;\n  }\n  return token;\n  }\n\n  backend.connections.subscribe((connection: MockConnection) => {\n    // We are using the setTimeout() function to simulate an \n    // asynchronous call to the server that takes 1 second. \n    setTimeout(() => {\n      //\n      // Fake implementation of /api/authenticate\n      //\n      let token:string;\n      if (connection.request.url.endsWith('/api/authenticate') &&\n        connection.request.method === RequestMethod.Post) {\n        let body = JSON.parse(connection.request.getBody());\n\n        token=getTokenFromEmail(body.email);\n        if (token && body.password === '1234') {\n          connection.mockRespond(new Response(\n            new ResponseOptions({\n              status: 200,\n              body: { token: token }\n           })));\n        } else {\n          connection.mockRespond(new Response(\n            new ResponseOptions({ status: 400 })\n          ));\n        }\n      }\n\n\n\n       // \n       // Fake implementation of /api/orders\n       //\n       if (connection.request.url.endsWith('/api/orders') && \n           connection.request.method === RequestMethod.Get) {\n         if (connection.request.headers.get('Authorization') === 'Bearer ' + token) {\n            connection.mockRespond(new Response(\n              new ResponseOptions({ status: 200, body: [1, 2, 3] })\n         ));\n       } else {\n           connection.mockRespond(new Response(\n             new ResponseOptions({ status: 401 })\n           ));\n       }\n    }\n\n\n\n    }, 1000);\n  });\n\n  return new Http(backend, options);\n}\n\nexport let fakeBackendProvider = {\n    provide: Http,\n    useFactory: fakeBackendFactory,\n    deps: [MockBackend, BaseRequestOptions]\n};","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n\\n<!-- Main jumbotron for a primary marketing message or call to action -->\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-3\\\">Hello, {{ authService.getCurrentUser().name }}!</h1>\\n    <p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p>\\n    <p><a class=\\\"btn btn-primary btn-lg\\\" href=\\\"#\\\" role=\\\"button\\\">Learn more &raquo;</a></p>\\n  </div>\\n</div>\\n\"","import { AuthService } from './../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService, \n    private router: Router\n    ) { \n  }\n\n  ngOnInit() {\n    \n  }\n\n  \n\n}\n","module.exports = \"\\n.form-signin {\\n  max-width: 330px;\\n  padding: 15px;\\n  margin: 0 auto;\\n}\\n.form-signin .form-signin-heading,\\n.form-signin .checkbox {\\n  margin-bottom: 10px;\\n}\\n.form-signin .checkbox {\\n  font-weight: normal;\\n}\\n.form-signin .form-control {\\n  position: relative;\\n  height: auto;\\n  box-sizing: border-box;\\n  padding: 10px;\\n  font-size: 16px;\\n}\\n.form-signin .form-control:focus {\\n  z-index: 2;\\n}\\n.form-signin input[type=\\\"email\\\"] {\\n  margin-bottom: -1px;\\n  border-bottom-right-radius: 0;\\n  border-bottom-left-radius: 0;\\n}\\n.form-signin input[type=\\\"password\\\"] {\\n  margin-bottom: 10px;\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n}\"","module.exports = \"<form class=\\\"form-signin\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"signIn(f.value)\\\">\\n  <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\n  <div *ngIf=\\\"invalidLogin\\\" class=\\\"alert alert-danger\\\">Invalid username and/or password.</div>\\n  <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n  <input type=\\\"email\\\" id=\\\"inputEmail\\\" name=\\\"email\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required autofocus>\\n  <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n  <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"password\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\n  <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\n</form>\\n\"","import { AuthService } from './../services/auth.service';\nimport { Component } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  invalidLogin: boolean; \n\n  constructor(\n    private router: Router, \n    private authService: AuthService) { }\n\n  signIn(credentials) {\n    this.authService.login(credentials)\n      .subscribe(result => { \n        if (result)\n          this.router.navigate(['/']);\n        else  \n          this.invalidLogin = true; \n      });\n  }\n}\n","module.exports = \".nav-account\\n{\\n    min-width: 300px;\\n    max-width: 400px;\\n    padding: 10px;\\n}\\n\\nbutton {\\n    margin-top:10px;\\n}\\n\\n.avatar {\\n    max-width:100%;\\n    max-height:100px;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\n  <a class=\\\"navbar-brand mr-3\\\" href=\\\"#\\\">Webapp</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  \\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Home</a>\\n      </li>\\n      <li *ngIf=\\\"authService.isLoggedIn() && authService.getCurrentUser().isAdmin\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Admin</a>\\n      </li>\\n    </ul>\\n    \\n    <ul class=\\\"navbar-nav navbar-right\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a href=\\\"#\\\" class=\\\"nav-link dropdown-toggle\\\" id=\\\"account-dropdown\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"fa fa-user\\\"></span> \\n          {{ authService.getCurrentUser().firstName }}\\n        </a>\\n        <ul class=\\\"dropdown-menu dropdown-menu-right nav-account\\\">\\n          <li>\\n            \\n            <div class=\\\"row text-center text-sm-left\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <img class=\\\"avatar\\\" src=\\\"{{ authService.getCurrentUser().avatar }}\\\" alt=\\\"{{ authService.getCurrentUser().firstName }}\\\" />\\n              </div>\\n              <div class=\\\"col-md-8 mt-2 mt-sm-0 details\\\">\\n                <span class=\\\"d-block font-weight-bold\\\">{{ authService.getCurrentUser().firstName }} {{ authService.getCurrentUser().lastName }}</span>\\n                <span class=\\\"d-block small text-muted\\\">{{ authService.getCurrentUser().email }}</span>\\n                <button class=\\\"btn btn-primary btn-block btn-sm\\\">Account</button>\\n              </div>\\n            </div>\\n            \\n          </li>\\n          <li class=\\\"divider\\\"></li>\\n          <li>\\n            \\n            <div *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"row\\\">\\n              <div class=\\\"col-lg-12\\\">\\n                <button (click)=\\\"logout()\\\" class=\\\"btn btn-danger btn-block\\\">  <i class=\\\"fa fa-sign-out\\\"></i> Sign out</button>\\n              </div>\\n            </div>\\n            \\n          </li>\\n        </ul>\\n      </li>\\n    </ul>\\n    \\n    \\n  </div>\\n</nav>\"","import { AuthService } from '../services/auth.service';\nimport { Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n\n  logout(){\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h1>Access Denied</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-access',\n  templateUrl: './no-access.component.html',\n  styleUrls: ['./no-access.component.css']\n})\nexport class NoAccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AuthService } from './auth.service';\nimport { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuard implements CanActivate {\n\n  constructor(private router:Router, private authService:AuthService) { }\n\n  canActivate(){\n    \n    let user=this.authService.getCurrentUser();\n    if(user && user.isAdmin==true){\n      return true;\n    }\n    this.router.navigate(['no-access']);\n    return false;\n  }\n}\n","import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{ \n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  canActivate() { // if logged in return true, otherwise return to login page and return false\n    if (this.authService.isLoggedIn()){\n      return true;\n    }\n    else {\n      this.router.navigate(['/login'])\n      return false;\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  jwtHelper=new JwtHelperService();\n  constructor(private http: Http) {\n\n  }\n\n  getToken() {\n    let token=localStorage.getItem('token');\n    if(token) return token;\n      return null\n  }\n\n  login(credentials) { \n   return this.http.post('/api/authenticate', \n      JSON.stringify(credentials))\n      .pipe(\n        map(response => {\n            let result=response.json();\n            if(result && result.token){\n              localStorage.setItem('token',result.token);\n              return true;\n            }\n            return false;\n          })\n      );\n  }\n\n  logout() { \n    localStorage.removeItem('token');\n    return !this.getToken();\n  }\n\n  isLoggedIn() { \n    let token=this.getToken();\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  getCurrentUser() {\n    let token=this.getToken();\n    if (!token) return null;\n    \n    let decodedToken=this.jwtHelper.decodeToken(token);\n    console.log(decodedToken);\n    return decodedToken;\n  }\n}\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nexport interface IOrder{\n  id:number\n}\n\n@Injectable()\nexport class OrderService {\n  constructor(private http:HttpClient) {}\n\n  getOrders() { \n    return this.http.get(\"http://demo2781136.mockable.io/api/orders\");\n  }\n}\n","// src/app/auth/token.interceptor.ts\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  \n  constructor(public auth: AuthService) {}\n  \n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n  \n    return next.handle(request);\n  \n  }\n}","module.exports = \"\"","module.exports = \"<p>\\n  signup works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}